NEXT_PUBLIC_SUPABASE_URL=private
NEXT_PUBLIC_SUPABASE_ANON_KEY=private
SUPABASE_SERVICE_ROLE_KEY=private
SUPABASE_STORAGE_BUCKET=videos
FFMPEG_PATH=ffmpeg

# Your Database URL (Keep This)
PG_BOSS_DATABASE_URL=postgresql://postgres.wuerzkwotgbmlnhgnfva:9HMWEhO0gsCTRrAu@aws-0-us-east-1.pooler.supabase.com:5432/postgres

# Your Existing Business Logic (Keep These)
DISABLE_LOGGING=false
MAX_SCENES_PER_EXECUTION=8
MAX_USER_JOBS=3
NEXT_PUBLIC_MAX_SCENES_PER_EXECUTION=8

# =========================================================================
# PRODUCTION-READY JOB QUEUE CONFIGURATION (New System)
# =========================================================================

# Polling intervals (MASSIVE improvement from your 2-second polling)
PG_BOSS_POLLING_INTERVAL=30          # 30 seconds (vs your 2 seconds)
PG_BOSS_MAINTENANCE_INTERVAL=600     # 10 minutes (vs your 1 minute)
PG_BOSS_MONITOR_INTERVAL=300         # 5 minutes

# Connection optimization
PG_BOSS_MAX_CONNECTIONS=10
PG_BOSS_CONNECTION_TIMEOUT=30000
PG_BOSS_IDLE_TIMEOUT=300000

# Data retention (production settings)
PG_BOSS_DELETE_AFTER_DAYS=7
PG_BOSS_ARCHIVE_AFTER=3600           # 1 hour

# Schema and retry settings
PG_BOSS_SCHEMA=pgboss
PG_BOSS_RETRY_LIMIT=5
PG_BOSS_RETRY_DELAY=30

# =========================================================================
# RENDER WORKER CONFIGURATION (Production Ready)
# =========================================================================

# Worker concurrency (start conservative for single user)
RENDER_CONCURRENCY=1                 # Single user optimized
RENDER_TEAM_CONCURRENCY=1           # Jobs per worker
RENDER_JOB_TIMEOUT_MINUTES=60       # 1 hour timeout per job

# Job processing limits
RENDER_JOB_RETRY_LIMIT=5
RENDER_JOB_RETRY_DELAY_SECONDS=30
RENDER_JOB_EXPIRE_SECONDS=3600      # 1 hour

# Resource limits for render jobs
MAX_SCENE_OBJECTS=100               # Max objects per scene
MAX_SCENE_DURATION_SECONDS=300      # 5 minutes max duration
MAX_VIDEO_PIXELS=8294400            # 4K UHD max resolution

# Dead letter queue for failed jobs
RENDER_DEADLETTER_QUEUE=render-failed

# =========================================================================
# QUEUE CONFIGURATION (Event-Driven + Polling Hybrid)
# =========================================================================

# Event-driven vs polling (HUGE efficiency gain)
RENDER_ENABLE_EVENTS=true           # Use LISTEN/NOTIFY for efficiency
RENDER_FALLBACK_POLLING_MS=10000    # 10 seconds fallback polling
RENDER_MAX_FALLBACK_ATTEMPTS=6      # 1 minute total with backoff

# Timeouts
RENDER_JOB_TIMEOUT_MS=900000        # 15 minutes total timeout

# =========================================================================
# MONITORING AND ALERTING (New Feature)
# =========================================================================

# Health check intervals
MONITORING_INTERVAL_MS=30000        # 30 seconds
WORKER_HEALTH_CHECK_INTERVAL_MS=60000 # 1 minute

# Alert thresholds (conservative for single user)
ALERT_ERROR_RATE_THRESHOLD=0.1      # 10% error rate
ALERT_RESPONSE_TIME_MS=30000        # 30 seconds
ALERT_MEMORY_THRESHOLD_MB=512       # 512MB memory limit
ALERT_ACTIVE_JOBS_THRESHOLD=10      # 10 concurrent jobs (low for single user)
ALERT_QUEUE_DEPTH_THRESHOLD=20      # 20 queued jobs (low for single user)

# External alerting (optional - add your Slack webhook if you want alerts)
# SLACK_WEBHOOK_URL=                # Slack webhook for alerts

# =========================================================================
# SYSTEM RESOURCE LIMITS
# =========================================================================

# Memory management
WORKER_MEMORY_LIMIT_MB=512
WORKER_SHUTDOWN_TIMEOUT_MS=30000    # 30 seconds graceful shutdown

# Node.js optimization
NODE_OPTIONS=--max-old-space-size=512

# =========================================================================
# DEVELOPMENT SETTINGS
# =========================================================================

# Environment
NODE_ENV=development

# Logging levels (keep debug on for now to see the improvements)
LOG_LEVEL=debug                     # See detailed logs of improvements
JOB_DEBUG=1                        # See job processing details

# Storage configuration
STORAGE_PROVIDER=supabase