# Production Environment Configuration for Job Queue System
# Copy this file to .env.production and configure according to your environment

# =========================================================================
# DATABASE CONFIGURATION
# =========================================================================

# Primary database connection for pg-boss
PG_BOSS_DATABASE_URL=postgresql://username:password@host:port/database?sslmode=require

# Connection pooling settings (production optimized)
PG_BOSS_MAX_CONNECTIONS=10
PG_BOSS_CONNECTION_TIMEOUT=30000
PG_BOSS_IDLE_TIMEOUT=300000

# =========================================================================
# PG-BOSS JOB QUEUE CONFIGURATION (Production Optimized)
# =========================================================================

# Polling intervals (optimized for production scale)
PG_BOSS_POLLING_INTERVAL=30          # 30 seconds (vs 1 second default)
PG_BOSS_MAINTENANCE_INTERVAL=600     # 10 minutes (vs 1 minute default)
PG_BOSS_MONITOR_INTERVAL=300         # 5 minutes (vs 1 minute default)

# Data retention (production settings)
PG_BOSS_DELETE_AFTER_DAYS=7
PG_BOSS_ARCHIVE_AFTER=3600           # 1 hour

# Schema and advanced settings
PG_BOSS_SCHEMA=pgboss
PG_BOSS_RETRY_LIMIT=5
PG_BOSS_RETRY_DELAY=30

# =========================================================================
# RENDER WORKER CONFIGURATION
# =========================================================================

# Worker concurrency (adjust based on server resources)
RENDER_CONCURRENCY=1                 # Single user: 1, Multi-user: 2-4
RENDER_TEAM_CONCURRENCY=1           # Jobs per worker
RENDER_JOB_TIMEOUT_MINUTES=60       # 1 hour timeout per job

# Job processing limits
RENDER_JOB_RETRY_LIMIT=5
RENDER_JOB_RETRY_DELAY_SECONDS=30
RENDER_JOB_EXPIRE_SECONDS=3600      # 1 hour

# Resource limits for render jobs
MAX_SCENE_OBJECTS=100               # Max objects per scene
MAX_SCENE_DURATION_SECONDS=300      # 5 minutes max duration
MAX_VIDEO_PIXELS=8294400            # 4K UHD max resolution

# Dead letter queue for failed jobs
RENDER_DEADLETTER_QUEUE=render-failed

# =========================================================================
# QUEUE CONFIGURATION
# =========================================================================

# Event-driven vs polling
RENDER_ENABLE_EVENTS=true           # Use LISTEN/NOTIFY for efficiency
RENDER_FALLBACK_POLLING_MS=10000    # 10 seconds fallback polling
RENDER_MAX_FALLBACK_ATTEMPTS=6      # 1 minute total with backoff

# Timeouts
RENDER_JOB_TIMEOUT_MS=900000        # 15 minutes total timeout

# =========================================================================
# MONITORING AND ALERTING
# =========================================================================

# Health check intervals
MONITORING_INTERVAL_MS=30000        # 30 seconds
WORKER_HEALTH_CHECK_INTERVAL_MS=60000 # 1 minute

# Alert thresholds
ALERT_ERROR_RATE_THRESHOLD=0.1      # 10% error rate
ALERT_RESPONSE_TIME_MS=30000        # 30 seconds
ALERT_MEMORY_THRESHOLD_MB=512       # 512MB memory limit
ALERT_ACTIVE_JOBS_THRESHOLD=50      # 50 concurrent jobs
ALERT_QUEUE_DEPTH_THRESHOLD=100     # 100 queued jobs

# External alerting (optional)
SLACK_WEBHOOK_URL=                  # Slack webhook for alerts
# PAGERDUTY_API_KEY=                # PagerDuty integration
# EMAIL_ALERT_ENDPOINT=             # Email alerting service

# =========================================================================
# SYSTEM RESOURCE LIMITS
# =========================================================================

# Memory management
WORKER_MEMORY_LIMIT_MB=512
WORKER_SHUTDOWN_TIMEOUT_MS=30000    # 30 seconds graceful shutdown

# Node.js optimization
NODE_OPTIONS=--max-old-space-size=512

# =========================================================================
# SECURITY AND COMPLIANCE
# =========================================================================

# Database SSL configuration
PG_SSL=require
PG_SSL_REJECT_UNAUTHORIZED=true

# Supabase configuration
NEXT_PUBLIC_SUPABASE_URL=your_supabase_url
NEXT_PUBLIC_SUPABASE_ANON_KEY=your_anon_key
SUPABASE_SERVICE_ROLE_KEY=your_service_role_key
SUPABASE_STORAGE_BUCKET=videos

# =========================================================================
# RENDERING CONFIGURATION
# =========================================================================

# FFmpeg path (ensure installed in production)
FFMPEG_PATH=ffmpeg

# Storage configuration
STORAGE_PROVIDER=supabase           # or 's3', 'gcs', etc.

# =========================================================================
# LOGGING AND DEBUGGING
# =========================================================================

# Environment
NODE_ENV=production

# Logging levels
LOG_LEVEL=info                      # error, warn, info, debug
JOB_DEBUG=0                        # Set to 1 for detailed job logging

# =========================================================================
# PERFORMANCE TUNING EXAMPLES
# =========================================================================

# For high-traffic production (multiple users):
# RENDER_CONCURRENCY=4
# PG_BOSS_POLLING_INTERVAL=10
# PG_BOSS_MAX_CONNECTIONS=20
# ALERT_ACTIVE_JOBS_THRESHOLD=100

# For single-user production (optimized efficiency):
# RENDER_CONCURRENCY=1
# PG_BOSS_POLLING_INTERVAL=60
# PG_BOSS_MAX_CONNECTIONS=5
# ALERT_ACTIVE_JOBS_THRESHOLD=10

# For development/testing:
# RENDER_CONCURRENCY=1
# PG_BOSS_POLLING_INTERVAL=5
# JOB_DEBUG=1
# LOG_LEVEL=debug

# =========================================================================
# DOCKER/CONTAINER CONFIGURATION
# =========================================================================

# Container resource limits (if using Docker)
# DOCKER_MEMORY_LIMIT=1g
# DOCKER_CPU_LIMIT=1.0

# Health check endpoints (for load balancers)
# HEALTH_CHECK_PATH=/api/health
# READINESS_CHECK_PATH=/api/ready
# METRICS_ENDPOINT_PATH=/api/metrics

# =========================================================================
# SCALING CONFIGURATION
# =========================================================================

# Horizontal scaling (multiple worker instances)
# WORKER_INSTANCE_ID=worker-1       # Unique identifier per instance
# ENABLE_DISTRIBUTED_LOCKS=true     # Prevent job duplication across instances

# Load balancing
# STICKY_SESSIONS=false             # For stateless operation

# =========================================================================
# BACKUP AND DISASTER RECOVERY
# =========================================================================

# Database backup configuration
# BACKUP_RETENTION_DAYS=30
# BACKUP_SCHEDULE=0 2 * * *         # Daily at 2 AM

# Job data retention
# FAILED_JOB_RETENTION_DAYS=7
# COMPLETED_JOB_RETENTION_DAYS=30